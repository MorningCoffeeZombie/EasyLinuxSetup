ALL METHODS:
Login as 'init 1' or emergency boot mode (Ctrl+Alt+F2) to prevent tmp files from becoming 'in-use'
or I could chroot in from a live USB...
cp -aX /var /var.BAK
cp -aX /tmp /tmp.BAK
cp /etc/fstab /home/$USER/Desktop/fstab.BAK



METHOD 1
--------

Use chmod 1777 to give the correct permissions to the destination partition.
chmod 1777 /tmp

Then edit /etc/fstab as follows:
UUID=67841494-f82b-4b9d-88b0-6ce0a779209f /var defaults 0 0
UUID=f356c952-2698-4d0c-bc0d-1f9c46b34afb /tmp defaults 0 0


METHOD 2
--------

Use binds in the fstab file
https://ubuntuforums.org/showthread.php?t=1780616
/home/jail/var /var bind defaults,bind,noatime,mode=0755 0 0
/home/jail/tmp /tmp bind defaults,bind,noatime,mode=1777 0 0



METHOD 3 - DID NOT WORK
--------

Sym link the files:
https://www.linuxos.pro/move-tmp-and-vartmp-to-a-separate-filesystem/
or
mkdir /drive2/tmp  
chmod 1777  /drive2/tmp  
rm -rf /tmp  
ln -s /drive2/tmp /tmp  






METHOD 4
--------
https://www.youtube.com/watch?v=S5QzXMJuyRk
step 1: in the installed os, check the dev paths for the partition to house tmpvar

# run these commands from a live disk
mkdir /mnt/root
mount /dev/sda3 /mnt/root
mkdir /mnt/newvar
# im not sure what the 'sdb1' should actually be
mount /dev/sdb1 /mnt/newvar
cd /mnt/root/var
cp -R * /mnt/newvar
cp /mnt/root/etc/fstab /mnt/root/etc/fstab.BAK20180623
echo #these are my additions for method 4 to mount var>>/mnt/root/etc/fstab
echo /dev/sdb1 /var ext4 defaults 0 0>>/mnt/root/etc/fstab
cd
mv /mnt/root/var /mnt/root/var.BAK20180623
mkdir /mnt/root/var

umount /mnt/root
umount /mnt/var

reboot
# it is suggested to install "anything-sync-daemon" in the AUR to speed up performance on this drive







